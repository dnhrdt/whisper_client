# WhisperClient Pylint Configuration
# Version: 1.0
# Timestamp: 2025-03-08 22:11 CET

[MASTER]
# Python version to use for features specific to a version
py-version=3.12

# Add files or directories to the blacklist
ignore=CVS, .git, __pycache__, venv, backup

# Add files or directories matching the regex patterns to the blacklist
ignore-patterns=

# Pickle collected data for later comparisons
persistent=yes

# List of plugins
load-plugins=

# List of C extensions allowed to be loaded
# Used to silence C extension related warnings
extension-pkg-allow-list=win32api,win32gui,win32clipboard

# Use multiple processes to speed up Pylint
jobs=4

# Allow loading of arbitrary C extensions
unsafe-load-any-extension=no

# Allow optimization of some AST trees
optimize-ast=no

[MESSAGES CONTROL]
# Only show warnings with the listed confidence levels
confidence=

# Disable specific messages or categories
disable=
    C0111, # missing-docstring
    C0103, # invalid-name
    C0303, # trailing-whitespace
    W1201, # logging-not-lazy
    W1202, # logging-format-interpolation
    R0903, # too-few-public-methods
    R0913, # too-many-arguments
    R0914, # too-many-locals
    W0511, # fixme (allows TODO comments)
    W0212, # protected-access
    W0703, # broad-except
    W0621, # redefined-outer-name
    W0622, # redefined-builtin
    W0221, # arguments-differ
    W0201, # attribute-defined-outside-init
    W0102, # dangerous-default-value
    W0613, # unused-argument
    E1101, # no-member
    C0330, # bad-continuation
    C0326, # bad-whitespace
    C0301, # line-too-long (handled by black)
    C0302, # too-many-lines
    R0801, # duplicate-code
    R0201, # no-self-use
    R0902, # too-many-instance-attributes
    R0904, # too-many-public-methods
    R0912, # too-many-branches
    R0915, # too-many-statements
    R1705, # no-else-return
    R1710, # inconsistent-return-statements
    R1720, # no-else-raise
    R1724, # no-else-continue
    R1725, # no-else-break

# Enable specific messages or categories
enable=

[REPORTS]
# Set the output format
output-format=text

# Put messages in a separate file for each module / package specified on the command line
files-output=no

# Tells whether to display a full report or only the messages
reports=no

# Python expression which should return a note less than 10
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display messages
msg-template={path}:{line}:{column}: {msg_id}: {msg} ({symbol})

[BASIC]
# Good variable names which should always be accepted
good-names=i, j, k, ex, Run, _, id, ip, db, fn, fs, io, os, re, dt, df, ui, fp, ws

# Bad variable names which should always be refused
bad-names=foo, bar, baz, toto, tutu, tata

# Colon-delimited sets of names that determine each other's naming style when the name regexes allow several styles
name-group=

# Include a hint for the correct naming format with invalid-name
include-naming-hint=no

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,50}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{0,50}$

# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{0,50}$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{0,50}$

# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,50}|(__.*__))$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,50}$

# Regular expression which should only match function or class names that do not require a docstring
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings
docstring-min-length=-1

[FORMAT]
# Maximum number of characters on a single line
max-line-length=100

# Regexp for a line that is allowed to be longer than the limit
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no else
single-line-if-stmt=no

# List of optional constructs for which whitespace checking is disabled
no-space-check=trailing-comma,dict-separator

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit
indent-string='    '

# Number of spaces of indent required inside a hanging or continued line
indent-after-paren=4

# Expected format of line ending
expected-line-ending-format=LF

[LOGGING]
# Format style used to check logging format string
logging-format-style=new

# Logging modules to check that the string format arguments are in logging function parameter format
logging-modules=logging

[MISCELLANEOUS]
# List of note tags to take in consideration
notes=FIXME,XXX,TODO

[SIMILARITIES]
# Minimum lines number of a similarity
min-similarity-lines=4

# Ignore comments when computing similarities
ignore-comments=yes

# Ignore docstrings when computing similarities
ignore-docstrings=yes

# Ignore imports when computing similarities
ignore-imports=yes

[SPELLING]
# Spelling dictionary name
spelling-dict=

# List of comma separated words that should not be checked
spelling-ignore-words=

# A path to a file that contains private dictionary
spelling-private-dict-file=

# Tells whether to store unknown words to indicated private dictionary in spelling-private-dict-file
spelling-store-unknown-words=no

[TYPECHECK]
# Tells whether missing members accessed in mixin class should be ignored
ignore-mixin-members=yes

# List of module names for which member attributes should not be checked
ignored-modules=

# List of class names for which member attributes should not be checked
ignored-classes=SQLObject

# List of members which are set dynamically and missed by pylint inference system
generated-members=REQUEST,acl_users,aq_parent

[VARIABLES]
# Tells whether we should check for unused import in __init__ files
init-import=no

# A regular expression matching the name of dummy variables
dummy-variables-rgx=_$|dummy

# List of additional names supposed to be defined in builtins
additional-builtins=

# List of strings which can identify a callback function by name
callbacks=cb_,_cb

[CLASSES]
# List of method names used to declare (i.e. assign) instance attributes
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method
valid-metaclass-classmethod-first-arg=mcs

# List of member names, which should be excluded from the protected access warning
exclude-protected=_asdict,_fields,_replace,_source,_make

[DESIGN]
# Maximum number of arguments for function / method
max-args=8

# Argument names that match this expression will be ignored
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class
max-parents=7

# Maximum number of attributes for a class
max-attributes=15

# Minimum number of public methods for a class
min-public-methods=1

# Maximum number of public methods for a class
max-public-methods=20

[IMPORTS]
# Deprecated modules which should not be used
deprecated-modules=regsub,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the given file
import-graph=

# Create a graph of external dependencies in the given file
ext-import-graph=

# Create a graph of internal dependencies in the given file
int-import-graph=

[EXCEPTIONS]
# Exceptions that will emit a warning when being caught
overgeneral-exceptions=Exception
